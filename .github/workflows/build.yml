name: CI Build (Win + Mac + Bundle)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt pyinstaller
      - shell: bash
        run: |
          pyinstaller --noconfirm --onefile --windowed ui/app.py \
            --name BlogCommentTool \
            --paths . \
            --add-data "src;src" \
            --add-data "data;data"
      - name: Pack Windows ZIP
        shell: pwsh
        run: |
          $stamp = Get-Date -Format "yyyyMMdd-HHmm"
          New-Item -ItemType Directory -Path release\windows -Force | Out-Null
          Copy-Item dist\BlogCommentTool.exe release\windows\
          python - <<'PY'
import pandas as pd, os
os.makedirs('release\\template', exist_ok=True)
pd.DataFrame(columns=["url","name","email","comment","status","notes"]).to_excel('release\\template\\comments_template.xlsx', index=False)
PY
          Compress-Archive -Path release\* -DestinationPath "BlogCommentTool_Windows_$stamp.zip" -Force
      - uses: actions/upload-artifact@v4
        with:
          name: win-artifact
          path: |
            BlogCommentTool_Windows_*.zip
            release/**
            dist/BlogCommentTool.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt pyinstaller
      - run: |
          pyinstaller --noconfirm --onefile --windowed ui/app.py \
            --name BlogCommentTool-mac \
            --paths . \
            --add-data "src:src" \
            --add-data "data:data"
      - name: Pack Mac ZIP
        run: |
          stamp=$(date +%Y%m%d-%H%M)
          mkdir -p release/mac release/windows release/template
          cp dist/BlogCommentTool-mac release/mac/
          python - <<'PY'
import pandas as pd, os
os.makedirs('release/template', exist_ok=True)
pd.DataFrame(columns=["url","name","email","comment","status","notes"]).to_excel('release/template/comments_template.xlsx', index=False)
PY
          (cd release && zip -r ../BlogCommentTool_mac_$stamp.zip .)
      - uses: actions/upload-artifact@v4
        with:
          name: mac-artifact
          path: |
            BlogCommentTool_mac_*.zip
            release/**
            dist/BlogCommentTool-mac

  bundle:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - run: |
          mkdir -p release/mac release/windows release/template
          cp artifacts/dist/BlogCommentTool-mac release/mac/ || cp artifacts/release/mac/BlogCommentTool-mac release/mac/
          cp artifacts/dist/BlogCommentTool.exe release/windows/ || cp artifacts/release/windows/BlogCommentTool.exe release/windows/
          cp -R artifacts/release/template release/ 2>/dev/null || true
          cat > release/README.md <<'MD'
# BlogCommentTool (GUI)
- Cần có Google Chrome trên máy người dùng.
- Excel template: 6 cột `url,name,email,comment,status,notes`.

macOS: chạy mac/BlogCommentTool-mac (Right-click → Open lần đầu).
Windows: chạy windows/BlogCommentTool.exe (More info → Run anyway).
MD
          stamp=$(date +%Y%m%d-%H%M)
          (cd release && zip -r ../BlogCommentTool_all_platforms_$stamp.zip .)
      - uses: actions/upload-artifact@v4
        with:
          name: all-platforms
          path: BlogCommentTool_all_platforms_*.zip
