name: ci: build Windows + macOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUTF8: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt || pip install \
            numpy==1.26.4 pandas==2.2.2 openpyxl \
            selenium webdriver-manager loguru typer requests \
            pyinstaller==6.10.0 pyinstaller-hooks-contrib
        shell: bash

      # Kiểm tra import mấy lib “hay lỗi” trước khi build
      - name: Smoke test imports
        run: |
          python - <<'PY'
          import sys, platform
          print("Python:", sys.version, "| OS:", platform.platform())
          import tkinter, _tkinter, numpy, pandas, loguru
          print("Tk:", tkinter.TkVersion, "| numpy:", numpy.__version__, "| pandas:", pandas.__version__)
          PY
        shell: bash

      # ===== macOS build =====
      - name: Build macOS binary
        if: runner.os == 'macOS'
        run: |
          rm -rf build dist *.spec || true
          pyinstaller --noconfirm --onefile --windowed ui/app.py \
            --name BlogCommentTool-mac \
            --paths . \
            --add-data "src:src" \
            --add-data "data:data" \
            --hidden-import loguru \
            --hidden-import tkinter --hidden-import _tkinter \
            --collect-submodules tkinter --collect-all loguru \
            --collect-submodules numpy   --collect-data numpy \
            --collect-submodules pandas  --collect-data pandas \
            --clean --log-level WARN
          cd dist && /usr/bin/zip -r BlogCommentTool-mac.zip BlogCommentTool-mac
        shell: bash

      # ===== Windows build =====
      - name: Build Windows binary
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Recurse -Force build, dist, *.spec -ErrorAction SilentlyContinue
          pyinstaller --noconfirm --onefile --windowed ui/app.py `
            --name BlogCommentTool-win `
            --paths . `
            --add-data "src;src" `
            --add-data "data;data" `
            --hidden-import loguru `
            --hidden-import tkinter --hidden-import _tkinter `
            --collect-submodules tkinter --collect-all loguru `
            --collect-submodules numpy   --collect-data numpy `
            --collect-submodules pandas  --collect-data pandas `
            --clean --log-level WARN
          Compress-Archive -Path dist\BlogCommentTool-win.exe -DestinationPath dist\BlogCommentTool-win.zip -Force
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: |
            dist/BlogCommentTool-*.zip
          if-no-files-found: error
